<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[高效清晰Layout布局文件的一些技巧]]></title>
      <url>http://yoursite.com/2016/08/08/android01/</url>
      <content type="html"><![CDATA[<p>当人们谈论Android性能的时候总是习惯讨论怎么写出清晰高效的Java代码,却忽略了layout布局文件。layout布局缓慢的渲染速度对app性能也有的很大的影响。充满不必要的views和可读性差的layout文件会让你的app运行缓慢。在本文中我会分享5个技巧来帮你写出高效清晰的layout布局文件。</p>
<h3 id="1-用TextView本身的属性同时显示图片和文字"><a href="#1-用TextView本身的属性同时显示图片和文字" class="headerlink" title="1.用TextView本身的属性同时显示图片和文字"></a>1.用TextView本身的属性同时显示图片和文字</h3><p>通常你需要在文本旁边添加一张图片，假设你需要添加图片在文字的左边，像下面这样：<br><img src="http://blog-10057188.cos.myqcloud.com/android01.png" alt=""></p>
<p>不少人首先想到的就是用一个LinearLayout或RelativeLayou来包含一个TextView和ImageView,最后你用了三个UI元素和一大坨代码。用TextView的compound drawable是一个更好更清晰的解决方案。你只需要一个属性就可以搞定。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;TextView</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:text=&quot;@string/batman&quot;</span><br><span class="line">        android:drawableLeft=&quot;@drawable/batman&quot;</span><br><span class="line">        android:drawableStart=&quot;@drawable/batman&quot;</span><br><span class="line">        android:drawablePadding=&quot;5dp&quot;&gt;</span><br><span class="line">&lt;/TextView&gt;</span><br></pre></td></tr></table></figure></p>
<p>用到的主要属性：</p>
<p>drawableLeft- 指定drawable放在文本的左边</p>
<p>drawableStart- 作用和drawableLeft相同但是它基于新的API(android 4.2)支持RTL</p>
<p>drawablePadding- 指定文本和drawable之间padding</p>
<h3 id="2-同时使用ImageView的src和background属性实现点击效果"><a href="#2-同时使用ImageView的src和background属性实现点击效果" class="headerlink" title="2.同时使用ImageView的src和background属性实现点击效果"></a>2.同时使用ImageView的src和background属性实现点击效果</h3><p>你应该同时使用它们，在很多情况下你会想要给ImageView添加点击效果，然后我看到很多人用LinearLayout来包裹一个ImageView来实现。添加另一个view是没必要的。下面的代码可以让你做的更好：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;ImageView</span><br><span class="line">        android:id=&quot;@+id/image&quot;</span><br><span class="line">        android:layout_width=&quot;@dimen/batman_logo_width&quot;</span><br><span class="line">        android:layout_height=&quot;@dimen/batman_logo_height&quot;</span><br><span class="line">        android:background=&quot;?attr/selectableItemBackground&quot;//点击效果</span><br><span class="line">        android:src=&quot;@drawable/batman_logo_transparent&quot;//图片</span><br><span class="line">        style=&quot;@style/logo_image_style&quot;/&gt;</span><br></pre></td></tr></table></figure>
<p>显示图片用”src”属性，drawable selector 图片点击效果用”background”属性实现，上面用的是android默认提供的selector,当然你也可以换成你自己实现的。</p>
<h3 id="3-用LinearLayout自带的分割线"><a href="#3-用LinearLayout自带的分割线" class="headerlink" title="3.用LinearLayout自带的分割线"></a>3.用LinearLayout自带的分割线</h3><p>分割线在app经常会用到的，使用频率高到让你惊讶。但是LinearLayout有一个属性可以帮你添加分割线。下面的例子中，LinearLayout包含2个TextView和基于他们中间的分割线。<br><img src="http://blog-10057188.cos.myqcloud.com/android03.png" alt=""></p>
<h4 id="3-1-Create-divider-shape-创建shape"><a href="#3-1-Create-divider-shape-创建shape" class="headerlink" title="3.1 Create divider shape(创建shape)"></a>3.1 Create divider shape(创建shape)</h4><p>下面是一个简单的shape divider_horizontal.xml用来当做分割线。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;size android:width=&quot;@dimen/divider_width&quot;/&gt;</span><br><span class="line">    &lt;solid android:color=&quot;@color/colorPrimaryDark&quot;/&gt;</span><br><span class="line"></span><br><span class="line">&lt;/shape&gt;</span><br></pre></td></tr></table></figure></p>
<h4 id="3-2Add-shape-to-LinearLayout"><a href="#3-2Add-shape-to-LinearLayout" class="headerlink" title="3.2Add shape to LinearLayout"></a>3.2Add shape to LinearLayout</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;LinearLayout android:layout_width=&quot;match_parent&quot;</span><br><span class="line">              android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">              android:orientation=&quot;horizontal&quot;</span><br><span class="line">              android:background=&quot;@android:color/white&quot;</span><br><span class="line">              android:divider=&quot;@drawable/divider_horizontal&quot;  //添加分割线</span><br><span class="line">              android:dividerPadding=&quot;5dp&quot; //设置padding</span><br><span class="line">              android:showDividers=&quot;middle&quot;&gt;//居中显示</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;TextView android:layout_width=&quot;0dp&quot;</span><br><span class="line">              android:layout_weight=&quot;0.5&quot;</span><br><span class="line">              android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">              android:gravity=&quot;center&quot;</span><br><span class="line">              style=&quot;@style/Text.Title&quot;</span><br><span class="line">              android:text=&quot;@string/batman_name&quot;/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView android:layout_width=&quot;0dp&quot;</span><br><span class="line">              android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">              android:layout_weight=&quot;0.5&quot;</span><br><span class="line">              android:gravity=&quot;center&quot;</span><br><span class="line">              style=&quot;@style/Text.Title&quot;</span><br><span class="line">              android:text=&quot;@string/superman_name&quot;/&gt;</span><br><span class="line"></span><br><span class="line">&lt;/LinearLayout&gt;</span><br></pre></td></tr></table></figure>
<p>上面用到了三个xml属性：</p>
<p>divider -用来定义一个drawable或者color作为分割线</p>
<p>showDividers -指定分割线在哪里显示，它们可以显示在开始位置，中间，末尾或者选择不显示</p>
<p>dividerPadding -给divider添加padding</p>
<h3 id="4-使用Space控件"><a href="#4-使用Space控件" class="headerlink" title="4.使用Space控件"></a>4.使用Space控件</h3><p>当你需要在2个UI控件添加间距的时候,你可能会添加padding或margin。有时最终的layout文件是非常混乱，可读性非常差。当你需要解决问题时，你突然意识到这里有一个5dp的paddingTop,那里有一个2dp的marginBottom,还有一个4dp的paddingBottom在第三个控件上然后你很难弄明白到底是哪个控件导致的问题。还有我发现有些人在2个控件之间添加LinearLayout或View来解决这个问题，看起来是一个很简单解决方案但是对App的性能有很大的影响。</p>
<p>这里有一个更简单更容易的方法那就是Space,看下官方的文档：“Space is a lightweight View subclass that may be used to create gaps between components in general purpose layouts.” 他们没有说谎，确实很轻量。如果你看过Space的实现会发现Space继承View但是没有绘制任何东西在canvas。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * Draw nothing.</span><br><span class="line"> *</span><br><span class="line"> * @param canvas an unused parameter.</span><br><span class="line"> */</span><br><span class="line">@Override</span><br><span class="line">public void draw(Canvas canvas) &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>使用方法很简单，看下面的图片，我们想要在在标题和描述之间添加间距。<br><img src="http://blog-10057188.cos.myqcloud.com/android04.png" alt=""></p>
<p>你只需要简单的在2个TextView之间添加一个Space就可以了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;TextView android:layout_width=&quot;match_parent&quot;</span><br><span class="line">          android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">          style=&quot;@style/Text.Title&quot;</span><br><span class="line"></span><br><span class="line">&lt;Space android:layout_width=&quot;match_parent&quot;</span><br><span class="line">       android:layout_height=&quot;10dp&quot;/&gt;//添加间距</span><br><span class="line"></span><br><span class="line">&lt;TextView android:layout_width=&quot;match_parent&quot;</span><br><span class="line">          android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">          android:text=&quot;@string/gotham_city_description&quot;</span><br><span class="line">          style=&quot;@style/Text.Details&quot;/&gt;</span><br></pre></td></tr></table></figure></p>
<h3 id="5-使用和标签"><a href="#5-使用和标签" class="headerlink" title="5.使用和标签"></a>5.使用<include>和<merge>标签</merge></include></h3><p>重用布局是一个保持app一致的好方法，这样以后有改变的话只要改一个文件就可以了，Android提供了<include>标签帮你重用布局。</include></p>
<p>例如你现在决定创建有一个logo图片居中的酷炫Toolbar工具栏，然后你想要添加到每个页面中<br>下面是batman_toolbar.xml代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;android.support.v7.widget.Toolbar</span><br><span class="line">        android:id=&quot;@+id/toolbar&quot;</span><br><span class="line">        android:layout_width=&quot;match_parent&quot;</span><br><span class="line">        android:layout_height=&quot;?attr/actionBarSize&quot;</span><br><span class="line">        android:background=&quot;?attr/colorPrimary&quot;</span><br><span class="line">        android:theme=&quot;@style/AppTheme.AppBarOverlay&quot;</span><br><span class="line">        app:popupTheme=&quot;@style/AppTheme.PopupOverlay&quot;&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;ImageView android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">               android:layout_height=&quot;@dimen/batman_logo_height&quot;</span><br><span class="line">               android:layout_gravity=&quot;center&quot;</span><br><span class="line">               android:src=&quot;@drawable/batman_logo_transparent&quot;/&gt;</span><br><span class="line"></span><br><span class="line">&lt;/android.support.v7.widget.Toolbar&gt;</span><br></pre></td></tr></table></figure></p>
<p>你可以复制粘贴这些代码到每个Activity,但是不要这么做，在编程中有一个重要的规则：当你复制粘贴，那你就是在做错误的事。在这种情况下你可以用<include>标签在多个界面重用这个布局。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;android.support.design.widget.CoordinatorLayout</span><br><span class="line">        xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class="line">        xmlns:tools=&quot;http://schemas.android.com/tools&quot;</span><br><span class="line">        android:layout_width=&quot;match_parent&quot;</span><br><span class="line">        android:layout_height=&quot;match_parent&quot;</span><br><span class="line">        android:fitsSystemWindows=&quot;true&quot;</span><br><span class="line">        android:background=&quot;@android:color/white&quot;</span><br><span class="line">        tools:context=&quot;.MainActivity&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;include layout=&quot;@layout/batman_toolbar&quot;/&gt;</span><br><span class="line"></span><br><span class="line">&lt;/android.support.design.widget.CoordinatorLayout&gt;</span><br></pre></td></tr></table></figure></include></p>
<p>用<include>标签你可以只用一行代码在app的每个页面添加你的toolbar,任何改变都会自动更新到所有页面。</include></p>
<p>除了<include>,<merge>也常用来从你的view层次结构中减不必要的view，它会移除没必要的嵌套的layouts，例如，如果被包含布局文件的根是一个LinearLayout,然后你把它include包含在另外一个LinearLayout里面，2个嵌套的LinearLayouts是没有必要的，这个嵌套的layout没有任何作用除了影响UI性能。在这种情况下可以用<merage \="">来替换被包含布局的根LinarLayout 移除不必要的view.</merage></merge></include></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[配置SSH keys]]></title>
      <url>http://yoursite.com/2016/07/07/git01/</url>
      <content type="html"><![CDATA[<h3 id="1-开始菜单Git-Bash-Window环境"><a href="#1-开始菜单Git-Bash-Window环境" class="headerlink" title="1 开始菜单Git Bash(Window环境)"></a>1 开始菜单Git Bash(Window环境)</h3><p><img src="http://blog-10057188.cos.myqcloud.com/git01.png" alt=""></p>
<h3 id="2-鼠标右键打开Git-Bash-Window环境"><a href="#2-鼠标右键打开Git-Bash-Window环境" class="headerlink" title="2 鼠标右键打开Git Bash(Window环境)"></a>2 鼠标右键打开Git Bash(Window环境)</h3><p><img src="http://blog-10057188.cos.myqcloud.com/git02.jpg" alt=""></p>
<h3 id="3-如果没有安装ssh，那么使用下面的指令"><a href="#3-如果没有安装ssh，那么使用下面的指令" class="headerlink" title="3 如果没有安装ssh，那么使用下面的指令"></a>3 如果没有安装ssh，那么使用下面的指令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ssh</span><br></pre></td></tr></table></figure>
<h3 id="4-检查SSH公钥-看看存不存在-ssh"><a href="#4-检查SSH公钥-看看存不存在-ssh" class="headerlink" title="4 检查SSH公钥 看看存不存在.ssh"></a>4 检查SSH公钥 看看存不存在.ssh</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ~/.ssh</span><br></pre></td></tr></table></figure>
<p>如果提示：No such file or directory 说明你是第一次使用git。</p>
<h3 id="5-生成SSH公钥"><a href="#5-生成SSH公钥" class="headerlink" title="5 生成SSH公钥"></a>5 生成SSH公钥</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C &quot;邮件地址@youremail.com&quot;</span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file in which to save the key (/Users/your_user_directory/.ssh/id_rsa):&lt;回车就好&gt;</span><br></pre></td></tr></table></figure>
<p>注意1: 此处的邮箱地址，你可以输入自己的邮箱地址；注意2: 此处的「-C」的是大写的「C」<br>然后系统会要你输入密码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Enter passphrase (empty for no passphrase):&lt;输入加密串&gt;</span><br><span class="line">Enter same passphrase again:&lt;再次输入加密串&gt;</span><br></pre></td></tr></table></figure></p>
<p>在回车中会提示你输入一个密码，这个密码会在你提交项目时使用，如果为空的话提交项目时则不用输入。这个设置是防止别人往你的项目里提交内容。<br>最后看到这样的界面，就成功设置ssh key了：<br><img src="http://blog-10057188.cos.myqcloud.com/git03.jpg" alt=""></p>
<h3 id="6-获取SSH-Key-现在你可以看到，在自己的目录下，有一个-ssh目录，说明成功了"><a href="#6-获取SSH-Key-现在你可以看到，在自己的目录下，有一个-ssh目录，说明成功了" class="headerlink" title="6 获取SSH Key,现在你可以看到，在自己的目录下，有一个.ssh目录，说明成功了"></a>6 获取SSH Key,现在你可以看到，在自己的目录下，有一个.ssh目录，说明成功了</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure>
<p>或者直接去目录下打开文件</p>
<h3 id="7-测试是否生效"><a href="#7-测试是否生效" class="headerlink" title="7 测试是否生效"></a>7 测试是否生效</h3><p>使用下面的命令测试<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure></p>
<p>如果是下面的反馈：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">The authenticity of host &apos;github.com (207.97.227.239)&apos; can&apos;t be established.</span><br><span class="line">RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.</span><br><span class="line">Are you sure you want to continue connecting (yes/no)?</span><br></pre></td></tr></table></figure></p>
<p>输入yes就好，然后会看到：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi cnfeat! You&apos;ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[在Mac OS X中开启或关闭显示隐藏文件]]></title>
      <url>http://yoursite.com/2016/07/04/mac01/</url>
      <content type="html"><![CDATA[<h3 id="如何在Mac-OS中开启或关闭显示隐藏文件命令"><a href="#如何在Mac-OS中开启或关闭显示隐藏文件命令" class="headerlink" title="如何在Mac OS中开启或关闭显示隐藏文件命令"></a>如何在Mac OS中开启或关闭显示隐藏文件命令</h3><ol>
<li>打开终端，输入：</li>
<li><p>此命令显示隐藏文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$: defaults write com.apple.finder AppleShowAllFiles -bool true</span><br></pre></td></tr></table></figure>
</li>
<li><p>此命令关闭显示隐藏文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$: defaults write com.apple.finder AppleShowAllFiles -bool false</span><br></pre></td></tr></table></figure>
</li>
<li><p>命令运行之后需要重新加载Finder：快捷键option+command+esc，选中Finder，重新启动即可</p>
</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[给博客系统绑定域名]]></title>
      <url>http://yoursite.com/2016/07/02/hexo01/</url>
      <content type="html"><![CDATA[<h3 id="域名配置错误了一直调整到现在"><a href="#域名配置错误了一直调整到现在" class="headerlink" title="域名配置错误了一直调整到现在"></a>域名配置错误了一直调整到现在</h3><h4 id="发帖纪念一下这个点还在码砖的攻城狮们-真爱生命-早睡早起-除非失眠-敲敲代码-看看书"><a href="#发帖纪念一下这个点还在码砖的攻城狮们-真爱生命-早睡早起-除非失眠-敲敲代码-看看书" class="headerlink" title="发帖纪念一下这个点还在码砖的攻城狮们,真爱生命,早睡早起(除非失眠,敲敲代码,看看书)"></a>发帖纪念一下这个点还在码砖的攻城狮们,真爱生命,早睡早起(除非失眠,敲敲代码,看看书)</h4><h1 id="现在说一下GitHub-Pages的空间域名绑定"><a href="#现在说一下GitHub-Pages的空间域名绑定" class="headerlink" title="现在说一下GitHub Pages的空间域名绑定"></a>现在说一下GitHub Pages的空间域名绑定</h1><ul>
<li>在项目source的目录下面，新建一个名为CNAME的文本文件，里面写入你要绑定的域名，比如6love1.com。(不用www)</li>
<li><p>然后命令行运行 </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$&gt;hexo clean</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$&gt;hexo generate</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$&gt;hexo deploy</span><br></pre></td></tr></table></figure>
</li>
<li><p>配置申请的自定义域名的DNS设置</p>
<ol>
<li><p>查找IP地址对应的IP地址 <a href="https://help.github.com/articles/setting-up-an-apex-domain/" target="_blank" rel="external">https://help.github.com/articles/setting-up-an-apex-domain/</a><br><img src="http://blog-10057188.cos.myqcloud.com/hexo02.png" alt=""></p>
</li>
<li><p>域名配置中添加A类记录和CNAME记录<br><img src="http://blog-10057188.cos.myqcloud.com/hexo01.png" alt=""></p>
</li>
</ol>
</li>
</ul>
<h2 id="恭喜大功告成-属于自己的静态博客系统已经有了自定义域名"><a href="#恭喜大功告成-属于自己的静态博客系统已经有了自定义域名" class="headerlink" title="恭喜大功告成,属于自己的静态博客系统已经有了自定义域名"></a>恭喜大功告成,属于自己的静态博客系统已经有了自定义域名</h2>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Ubuntu在Vmware中自动适配屏幕]]></title>
      <url>http://yoursite.com/2016/06/18/ubuntu01/</url>
      <content type="html"><![CDATA[<p>解决方法:发现没有装VMware Tools</p>
<p>安装VMware Tools步骤</p>
<ol>
<li>点击菜单栏，虚拟机 → 安装VMware工具 → Install</li>
<li>这样会弹出一个包VMwareTools-<strong><em>*</em></strong>.tar.gz</li>
<li><p>将VMwareTools-9.6.0-1294478.tar.gz 复制到一个文件夹<br>解压，用tar xzf VMwareTools-9.6.0-1294478.tar.gz 命令行<br>得到文件夹vmware-tools-distrib</p>
<p>或者 右击 提取到此处 </p>
</li>
<li>命令行进入文件夹vmware-tools-distrib,再使用sudo ./vmware-install.pl安装即可</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hexo的使用方法]]></title>
      <url>http://yoursite.com/2016/06/15/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
<p>图标 <a href="http://www.yeahzan.com/fa/facss.html" target="_blank" rel="external">http://www.yeahzan.com/fa/facss.html</a></p>
]]></content>
    </entry>
    
  
  
</search>
